import"./modulepreload-polyfill-B5Qt9EMX.js";console.log("Loading Portfolio Drift Racing Game - VERSION 3.0");class b{constructor(){console.log("Portfolio Drift Game starting..."),this.initialized=!1,this.loading=!0,this.projectsCollected=0,this.skillsCollected=0,this.experienceCollected=0,this.totalCollectibles=15,this.score=0,this.speed=0,this.drift=!1,this.driftScore=0,this.velocity=new THREE.Vector3(0,0,0),this.angularVelocity=0,this.steerAngle=0,this.maxSteerAngle=.6,this.wheelBase=4,this.maxSpeed=1.2,this.acceleration=.03,this.brakeForce=.05,this.friction=.92,this.lateralFriction=.85,this.driftThreshold=.3,this.driftMultiplier=.7,this.isDrifting=!1,this.driftAngle=0,this.driftIntensity=0,this.driftParticles=[],this.keys={accelerate:!1,brake:!1,left:!1,right:!1,handbrake:!1},this.inputSmoothing={throttle:0,brake:0,steering:0},this.portfolioData={projects:[{name:"AvukatLLM",tech:"AI/ML",points:100,color:16739179},{name:"GoDash",tech:"Go",points:80,color:5164484},{name:"MyYDS",tech:"React",points:90,color:4569041},{name:"TYT Platform",tech:"PWA",points:85,color:9883316},{name:"LinkedHU",tech:"Node.js",points:75,color:16771751}],skills:[{name:"JavaScript",level:90,color:15965202},{name:"Python",level:85,color:3447003},{name:"React",level:80,color:6413051},{name:"Three.js",level:75,color:0},{name:"AI/ML",level:85,color:15158332}],experiences:[{company:"Binary Brain Technology",role:"Software Intern",points:150,color:10181046},{company:"TellUS",role:"Software Intern",points:120,color:3426654},{company:"Hacettepe University",role:"Student",points:100,color:3066993}]},this.collectibles=[],this.init()}async init(){console.log("Initializing Portfolio Drift Game...");try{this.setupScene(),await this.loadAssets(),this.createWorld(),this.createCar(),this.createCollectibles(),this.setupControls(),this.setupUI(),this.hideLoadingScreen(),this.showWelcomeDialog(),this.gameLoop(),this.initialized=!0,console.log("Portfolio Drift Game successfully initialized!")}catch(e){console.error("Game initialization error:",e),this.showError(e.message)}}setupScene(){console.log("Setting up 3D scene..."),this.scene=new THREE.Scene,this.scene.background=new THREE.Color(8900331),this.scene.fog=new THREE.Fog(8900331,50,200),this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,10,15),this.renderer=new THREE.WebGLRenderer({antialias:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=THREE.PCFSoftShadowMap,document.getElementById("game-container").appendChild(this.renderer.domElement);const e=new THREE.AmbientLight(16777215,.6);this.scene.add(e);const o=new THREE.DirectionalLight(16777215,.8);o.position.set(50,100,50),o.castShadow=!0,o.shadow.mapSize.width=2048,o.shadow.mapSize.height=2048,o.shadow.camera.near=.5,o.shadow.camera.far=500,o.shadow.camera.left=-100,o.shadow.camera.right=100,o.shadow.camera.top=100,o.shadow.camera.bottom=-100,this.scene.add(o),window.addEventListener("resize",()=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)})}async loadAssets(){return new Promise(e=>{console.log("Loading game assets..."),setTimeout(()=>{e()},1500)})}createWorld(){console.log("Creating race track world...");const e=new THREE.PlaneGeometry(200,200),o=new THREE.MeshLambertMaterial({color:3355443,transparent:!0,opacity:.8});this.track=new THREE.Mesh(e,o),this.track.rotation.x=-Math.PI/2,this.track.receiveShadow=!0,this.scene.add(this.track),this.createTrackBorders(),this.createBuildings()}createTrackBorders(){const e=new THREE.MeshLambertMaterial({color:16729943}),o=[],t=80,i=32;for(let s=0;s<i;s++){const a=s/i*Math.PI*2,n=Math.cos(a)*t,r=Math.sin(a)*t;o.push({x:n,z:r})}o.forEach((s,a)=>{const n=new THREE.Mesh(new THREE.BoxGeometry(4,3,4),e);n.position.set(s.x,1.5,s.z),n.castShadow=!0,this.scene.add(n)})}createBuildings(){const e=[new THREE.MeshLambertMaterial({color:7101671}),new THREE.MeshLambertMaterial({color:10656766}),new THREE.MeshLambertMaterial({color:7649791}),new THREE.MeshLambertMaterial({color:623843})];for(let o=0;o<20;o++){const t=new THREE.Mesh(new THREE.BoxGeometry(Math.random()*8+4,Math.random()*15+5,Math.random()*8+4),e[Math.floor(Math.random()*e.length)]),i=Math.random()*Math.PI*2,s=100+Math.random()*50;t.position.set(Math.cos(i)*s,t.geometry.parameters.height/2,Math.sin(i)*s),t.castShadow=!0,this.scene.add(t)}}createCar(){console.log("Creating player car..."),this.car=new THREE.Group;const e=new THREE.BoxGeometry(2,.8,4.5),o=new THREE.MeshLambertMaterial({color:14774357}),t=new THREE.Mesh(e,o);t.position.y=.4,t.castShadow=!0,this.car.add(t);const i=new THREE.BoxGeometry(1.6,.6,2.2),s=new THREE.MeshLambertMaterial({color:2962486}),a=new THREE.Mesh(i,s);a.position.y=1.1,a.position.z=-.3,a.castShadow=!0,this.car.add(a);const n=new THREE.BoxGeometry(1.8,.3,.5),r=new THREE.MeshLambertMaterial({color:6516338}),l=new THREE.Mesh(n,r);l.position.y=.15,l.position.z=2.5,this.car.add(l);const h=new THREE.CylinderGeometry(.4,.4,.3),m=new THREE.MeshLambertMaterial({color:2962486}),f=new THREE.MeshLambertMaterial({color:7649791}),u=[{x:-1.2,z:1.8},{x:1.2,z:1.8},{x:-1.2,z:-1.8},{x:1.2,z:-1.8}];this.wheels=[],this.frontWheels=[],u.forEach((p,M)=>{const c=new THREE.Group,y=new THREE.Mesh(h,m);y.rotation.z=Math.PI/2,c.add(y);const g=new THREE.Mesh(new THREE.CylinderGeometry(.25,.25,.32),f);g.rotation.z=Math.PI/2,c.add(g),c.position.set(p.x,.4,p.z),c.castShadow=!0,this.car.add(c),this.wheels.push(c),M<2&&this.frontWheels.push(c)}),this.car.position.set(0,0,0),this.car.rotation.y=0,this.velocity=new THREE.Vector3(0,0,0),this.angularVelocity=0,this.speed=0,this.scene.add(this.car)}createCollectibles(){console.log("Creating portfolio collectibles..."),this.portfolioData.projects.forEach((e,o)=>{const t=this.createCollectible(e.name,e.tech,e.color,"project",e.points),i=o/this.portfolioData.projects.length*Math.PI*2,s=30;t.position.set(Math.cos(i)*s,2,Math.sin(i)*s),this.collectibles.push(t),this.scene.add(t)}),this.portfolioData.skills.forEach((e,o)=>{const t=this.createCollectible(e.name,`${e.level}%`,e.color,"skill",e.level),i=o/this.portfolioData.skills.length*Math.PI*2,s=15;t.position.set(Math.cos(i)*s,2,Math.sin(i)*s),this.collectibles.push(t),this.scene.add(t)}),this.portfolioData.experiences.forEach((e,o)=>{const t=this.createCollectible(e.company,e.role,e.color,"experience",e.points),i=o/this.portfolioData.experiences.length*Math.PI*2,s=50;t.position.set(Math.cos(i)*s,2,Math.sin(i)*s),this.collectibles.push(t),this.scene.add(t)})}createCollectible(e,o,t,i,s){const a=new THREE.Group,n=new THREE.OctahedronGeometry(1.5),r=new THREE.MeshLambertMaterial({color:t,emissive:t,emissiveIntensity:.3}),l=new THREE.Mesh(n,r);return l.castShadow=!0,a.add(l),a.userData={name:e,subtitle:o,type:i,points:s,collected:!1,originalY:2,floatOffset:Math.random()*Math.PI*2},a}setupControls(){console.log("Setting up car controls..."),window.addEventListener("keydown",e=>{switch(e.key.toLowerCase()){case"w":case"arrowup":this.keys.accelerate=!0;break;case"s":case"arrowdown":this.keys.brake=!0;break;case"a":case"arrowleft":this.keys.left=!0;break;case"d":case"arrowright":this.keys.right=!0;break;case" ":this.keys.handbrake=!0,e.preventDefault();break;case"escape":this.toggleMenu();break}}),window.addEventListener("keyup",e=>{switch(e.key.toLowerCase()){case"w":case"arrowup":this.keys.accelerate=!1;break;case"s":case"arrowdown":this.keys.brake=!1;break;case"a":case"arrowleft":this.keys.left=!1;break;case"d":case"arrowright":this.keys.right=!1;break;case" ":this.keys.handbrake=!1;break}})}setupUI(){this.updateUI(),document.getElementById("dialog-continue").addEventListener("click",()=>{this.hideDialog()}),document.getElementById("menu-button").addEventListener("click",()=>{this.toggleMenu()}),document.getElementById("close-menu").addEventListener("click",()=>{this.toggleMenu()}),document.getElementById("restart-button").addEventListener("click",()=>{window.location.reload()}),document.getElementById("back-to-portfolio").addEventListener("click",()=>{window.location.href="index.html"})}updateCarPhysics(){this.updateInputSmoothing();const e=this.inputSmoothing.throttle,o=this.inputSmoothing.brake,t=this.inputSmoothing.steering;this.speed=this.velocity.length();const i=Math.min(this.speed*3,1);this.steerAngle=t*this.maxSteerAngle*i,this.frontWheels.forEach(d=>{d.rotation.y=this.steerAngle});const s=e*this.acceleration,a=o*this.brakeForce+(this.keys.handbrake?this.brakeForce*1.5:0),n=new THREE.Vector3(0,0,1).applyQuaternion(this.car.quaternion),r=new THREE.Vector3(1,0,0).applyQuaternion(this.car.quaternion),l=n.clone().multiplyScalar(s);if(this.velocity.add(l),this.speed>.01){const d=this.velocity.clone().normalize().multiplyScalar(-a);this.velocity.add(d)}const h=this.velocity.clone().normalize(),m=h.dot(n),f=h.dot(r);this.driftAngle=Math.atan2(f,Math.abs(m));const u=Math.abs(f*this.speed);this.isDrifting=u>this.driftThreshold&&this.keys.handbrake,this.driftIntensity=Math.min(u/.8,1);let p=this.lateralFriction;this.isDrifting&&(p*=this.driftMultiplier,this.driftScore+=this.driftIntensity*2);const M=n.clone().multiplyScalar(n.dot(this.velocity)),c=r.clone().multiplyScalar(r.dot(this.velocity));if(c.multiplyScalar(p),this.velocity=M.add(c),this.velocity.multiplyScalar(this.friction),Math.abs(this.steerAngle)>.01&&this.speed>.01){const d=this.wheelBase/Math.tan(Math.abs(this.steerAngle));this.angularVelocity=this.speed/d*Math.sign(this.steerAngle),this.angularVelocity=Math.max(-.1,Math.min(.1,this.angularVelocity))}else this.angularVelocity*=.9;this.car.rotation.y+=this.angularVelocity,this.car.position.add(this.velocity);const y=this.speed*8;this.wheels.forEach(d=>{d.children[0].rotation.x+=y*(this.velocity.z>0?1:-1)}),this.updateDriftEffects();const g=Math.floor(this.speed*200),E=document.querySelector(".controls-hint p");E&&this.isDrifting?E.innerHTML=`<strong>🔥 DRIFT! Speed: ${g} km/h | WASD - Hareket | SPACE - Drift | ESC - Menü</strong>`:E&&(E.innerHTML=`<strong>Speed: ${g} km/h | WASD - Hareket | SPACE - Drift | ESC - Menü</strong>`)}updateInputSmoothing(){const o=this.keys.accelerate?1:0;this.inputSmoothing.throttle+=(o-this.inputSmoothing.throttle)*.15;const t=this.keys.brake?1:0;this.inputSmoothing.brake+=(t-this.inputSmoothing.brake)*.15;let i=0;this.keys.left&&(i=1),this.keys.right&&(i=-1),this.inputSmoothing.steering+=(i-this.inputSmoothing.steering)*.15*2}updateDriftEffects(){this.isDrifting&&this.driftIntensity>.3&&Math.random()<.3&&this.createDriftParticle(),this.driftParticles.forEach((e,o)=>{e.scale.multiplyScalar(.95),e.material.opacity*=.95,e.scale.x<.1&&(this.scene.remove(e),this.driftParticles.splice(o,1))})}createDriftParticle(){const e=new THREE.SphereGeometry(.1),o=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,opacity:.8}),t=new THREE.Mesh(e,o),i=new THREE.Vector3(0,0,-2).applyQuaternion(this.car.quaternion);t.position.copy(this.car.position).add(i),t.position.y=.1,t.position.x+=(Math.random()-.5)*2,t.position.z+=(Math.random()-.5)*2,this.scene.add(t),this.driftParticles.push(t)}checkCollisions(){this.collectibles.forEach((t,i)=>{t.userData.collected||this.car.position.distanceTo(t.position)<3&&this.collectItem(t,i)});const e=85;if(Math.sqrt(this.car.position.x**2+this.car.position.z**2)>e){const t=new THREE.Vector3(this.car.position.x,0,this.car.position.z).normalize(),i=this.velocity.dot(t);if(i>0){const a=t.multiplyScalar(i*1.5);this.velocity.sub(a)}const s=t.multiplyScalar(e*.98);this.car.position.x=s.x,this.car.position.z=s.z,this.velocity.multiplyScalar(.3)}this.car.position.y=0}collectItem(e,o){switch(e.userData.collected=!0,e.scale.set(0,0,0),this.score+=e.userData.points,e.userData.type){case"project":this.projectsCollected++;break;case"skill":this.skillsCollected++;break;case"experience":this.experienceCollected++;break}this.showCollectionDialog(e.userData),this.updateUI(),this.projectsCollected+this.skillsCollected+this.experienceCollected>=this.totalCollectibles&&setTimeout(()=>{this.showVictoryDialog()},2e3)}updateUI(){const e=this.projectsCollected+this.skillsCollected+this.experienceCollected,o=e/this.totalCollectibles*100;document.getElementById("progress-fill").style.width=`${o}%`;const t=document.getElementById("code-fragments");if(t&&(t.textContent=`${e}/${this.totalCollectibles}`),this.isDrifting&&this.driftIntensity>.5){const i=document.querySelector(".progress-label");i&&(i.textContent=`🔥 DRIFT COMBO: ${Math.floor(this.driftScore)} | Portfolio: ${e}/${this.totalCollectibles}`)}else{const i=document.querySelector(".progress-label");i&&(i.textContent="Portfolio Toplama İlerlemesi")}}animateCollectibles(){this.collectibles.forEach(e=>{e.userData.collected||(e.position.y=e.userData.originalY+Math.sin(Date.now()*.003+e.userData.floatOffset)*.5,e.rotation.y+=.02,e.rotation.x+=.01)})}updateCamera(){const e=this.car.position.clone(),o=this.car.rotation.y,t=Math.min(this.speed*2,1),i=12+t*8,s=6+t*4,a=new THREE.Vector3(0,s,i);if(a.applyAxisAngle(new THREE.Vector3(0,1,0),o),this.isDrifting){const m=this.driftIntensity*.5;a.x+=(Math.random()-.5)*m,a.y+=(Math.random()-.5)*m*.5}const n=e.clone().add(a),r=.08+t*.02;this.camera.position.lerp(n,r);const l=this.velocity.clone().multiplyScalar(3),h=e.clone().add(l);h.y+=2,this.camera.lookAt(h)}showCollectionDialog(e){const o=document.getElementById("story-dialog"),t=document.getElementById("dialog-title"),i=document.getElementById("dialog-text");t.textContent=`${e.name} Toplandı!`;let s="";switch(e.type){case"project":s=`${e.name} projesi toplandı! Teknoloji: ${e.subtitle}. Bu proje portfolio deneyimimin önemli bir parçası.`;break;case"skill":s=`${e.name} yeteneği toplandı! Seviye: ${e.subtitle}. Bu teknolojide güçlü deneyimim var.`;break;case"experience":s=`${e.name} deneyimi toplandı! Pozisyon: ${e.subtitle}. Bu deneyim kariyerimde önemli bir adım.`;break}i.textContent=s,o.classList.remove("hidden"),setTimeout(()=>{this.hideDialog()},3e3)}showWelcomeDialog(){const e=document.getElementById("story-dialog"),o=document.getElementById("dialog-title"),t=document.getElementById("dialog-text");o.textContent="Portfolio Drift Racing'e Hoş Geldin!",t.textContent="Merhaba! Ben Eyüp Zafer ÜNAL. Bu oyunda arabamla drift atarak CV'mdeki projeleri, yetenekleri ve deneyimleri toplamalısın. WASD ile sür, SPACE ile drift yap!",e.classList.remove("hidden")}showVictoryDialog(){const e=document.getElementById("story-dialog"),o=document.getElementById("dialog-title"),t=document.getElementById("dialog-text");o.textContent="Tebrikler! 🎉",t.textContent=`Tüm portfolio öğelerini topladın! Toplam skor: ${this.score} puan. Drift skoru: ${Math.floor(this.driftScore)}. Artık portfolyoma göz atabilirsin!`,e.classList.remove("hidden")}hideDialog(){document.getElementById("story-dialog").classList.add("hidden")}toggleMenu(){document.getElementById("menu-panel").classList.toggle("hidden")}hideLoadingScreen(){const e=document.getElementById("loading-screen");e.style.opacity="0",setTimeout(()=>{e.style.display="none",this.loading=!1},500)}showError(e){const o=document.getElementById("loading-screen");o&&(o.innerHTML=`
                <div class="loading-content">
                    <p style="color: #f50057; font-size: 18px;">Hata: ${e}</p>
                    <button onclick="window.location.reload()" 
                            style="margin-top: 15px; padding: 8px 16px; background: #f50057; 
                                   color: white; border: none; border-radius: 4px; cursor: pointer;">
                        Yeniden Yükle
                    </button>
                </div>
            `)}gameLoop(){const e=()=>{this.initialized&&!this.loading&&(this.updateCarPhysics(),this.checkCollisions(),this.animateCollectibles(),this.updateCamera()),this.renderer.render(this.scene,this.camera),requestAnimationFrame(e)};e()}}document.addEventListener("DOMContentLoaded",()=>{console.log("DOM loaded, initializing Portfolio Drift Game..."),setTimeout(()=>{try{window.gameInstance=new b}catch(w){console.error("Failed to initialize game:",w),alert("Portfolio Drift oyunu başlatılamadı: "+w.message)}},500)});console.log("Portfolio Drift Game.js file successfully loaded");
