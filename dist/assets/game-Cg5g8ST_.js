import"./modulepreload-polyfill-B5Qt9EMX.js";class g{constructor(e,t){this.car=e,this.scene=t,this.velocity=new THREE.Vector3(0,0,0),this.angularVelocity=0,this.speed=0,this.position=new THREE.Vector3(0,0,0),this.rotation=0,this.maxSpeed=2,this.acceleration=.08,this.brakeForce=.12,this.friction=.88,this.steeringSensitivity=.03,this.maxSteerAngle=.8,this.driftThreshold=.4,this.isDrifting=!1,this.driftScore=0,this.driftParticles=[]}update(e){const t=e.throttle||0,i=e.brake||0,s=e.steering||0,o=e.handbrake||!1;this.position.copy(this.car.mesh.position),this.rotation=this.car.mesh.rotation.y,this.updateMovement(t,i,s,o),this.car.mesh.position.copy(this.position),this.car.mesh.rotation.y=this.rotation,this.updateWheelSteering(s),this.car.animateWheels(this.speed,this.velocity),this.updateDriftEffects()}updateMovement(e,t,i,s){const o=new THREE.Vector3(-Math.sin(this.rotation),0,-Math.cos(this.rotation));if(new THREE.Vector3(Math.cos(this.rotation),0,-Math.sin(this.rotation)),e>0){const a=o.clone().multiplyScalar(e*this.acceleration);this.velocity.add(a)}if(t>0&&this.speed<.1){const a=o.clone().multiplyScalar(-t*this.acceleration*.6);this.velocity.add(a)}else if(t>0&&this.speed>.1){const a=this.velocity.clone().normalize().multiplyScalar(-t*this.brakeForce);this.velocity.add(a)}if(s&&this.speed>.2){const a=this.velocity.clone().normalize().multiplyScalar(-this.brakeForce*.3);this.velocity.add(a),this.isDrifting=!0}else this.isDrifting=!1;if(this.speed=this.velocity.length(),this.speed>this.maxSpeed&&(this.velocity.normalize().multiplyScalar(this.maxSpeed),this.speed=this.maxSpeed),Math.abs(i)>.1&&this.speed>.1){const a=i*this.steeringSensitivity*this.speed;this.rotation+=a}this.velocity.multiplyScalar(this.friction),this.position.add(this.velocity),this.speed<.01&&(this.velocity.set(0,0,0),this.speed=0),this.isDrifting&&(this.driftScore+=this.speed*2)}updateWheelSteering(e){if(this.car.updateSteeringWheels){const t=e*this.maxSteerAngle;this.car.updateSteeringWheels(t)}}updateDriftEffects(){this.isDrifting&&this.speed>.3&&Math.random()<.4&&this.createDriftParticle(),this.driftParticles.forEach((e,t)=>{e.scale.multiplyScalar(.95),e.material.opacity*=.95,e.scale.x<.1&&(this.scene.remove(e),this.driftParticles.splice(t,1))})}createDriftParticle(){const e=new THREE.SphereGeometry(.15),t=new THREE.MeshLambertMaterial({color:16777215,transparent:!0,opacity:.8}),i=new THREE.Mesh(e,t),s=new THREE.Vector3(Math.sin(this.rotation),0,Math.cos(this.rotation)).multiplyScalar(2.5);i.position.copy(this.position).add(s),i.position.y=.1,i.position.x+=(Math.random()-.5)*1.5,i.position.z+=(Math.random()-.5)*1.5,this.scene.add(i),this.driftParticles.push(i)}getSpeed(){return this.speed}getDriftScore(){return Math.floor(this.driftScore)}getIsDrifting(){return this.isDrifting}getPhysicsState(){return{velocity:this.velocity.clone(),speed:this.speed,isDrifting:this.isDrifting,position:this.position.clone(),rotation:this.rotation}}getPosition(){return this.position}getRotation(){return this.rotation}reset(){this.velocity.set(0,0,0),this.position.set(0,0,0),this.rotation=0,this.speed=0,this.driftScore=0,this.isDrifting=!1,this.driftParticles.forEach(e=>{this.scene.remove(e)}),this.driftParticles=[]}}class f{constructor(){this.keys={accelerate:!1,brake:!1,left:!1,right:!1,handbrake:!1},this.input={throttle:0,brake:0,steering:0,handbrake:!1},this.smoothing=.15,this.setupEventListeners()}setupEventListeners(){console.log("Setting up car controls..."),window.addEventListener("keydown",e=>{this.handleKeyDown(e)}),window.addEventListener("keyup",e=>{this.handleKeyUp(e)})}handleKeyDown(e){switch(e.key.toLowerCase()){case"w":case"arrowup":this.keys.accelerate=!0;break;case"s":case"arrowdown":this.keys.brake=!0;break;case"a":case"arrowleft":this.keys.left=!0;break;case"d":case"arrowright":this.keys.right=!0;break;case" ":this.keys.handbrake=!0,e.preventDefault();break;case"escape":this.toggleMenu();break}}handleKeyUp(e){switch(e.key.toLowerCase()){case"w":case"arrowup":this.keys.accelerate=!1;break;case"s":case"arrowdown":this.keys.brake=!1;break;case"a":case"arrowleft":this.keys.left=!1;break;case"d":case"arrowright":this.keys.right=!1;break;case" ":this.keys.handbrake=!1;break}}update(){this.updateThrottle(),this.updateBrake(),this.updateSteering(),this.updateHandbrake()}updateThrottle(){const e=this.keys.accelerate?1:0;this.input.throttle+=(e-this.input.throttle)*this.smoothing,Math.abs(this.input.throttle)<.01&&(this.input.throttle=0)}updateBrake(){const e=this.keys.brake?1:0;this.input.brake+=(e-this.input.brake)*this.smoothing,Math.abs(this.input.brake)<.01&&(this.input.brake=0)}updateSteering(){let e=0;this.keys.left&&(e=-1),this.keys.right&&(e=1),this.input.steering+=(e-this.input.steering)*(this.smoothing*3),Math.abs(this.input.steering)<.01&&(this.input.steering=0)}updateHandbrake(){this.input.handbrake=this.keys.handbrake}getInputState(){return{throttle:this.input.throttle,brake:this.input.brake,steering:this.input.steering,handbrake:this.input.handbrake}}toggleMenu(){const e=document.getElementById("menu-panel");e&&e.classList.toggle("hidden")}getDebugInfo(){return{keys:{...this.keys},input:{...this.input}}}reset(){this.keys.accelerate=!1,this.keys.brake=!1,this.keys.left=!1,this.keys.right=!1,this.keys.handbrake=!1,this.input.throttle=0,this.input.brake=0,this.input.steering=0,this.input.handbrake=!1}}class y{constructor(e,t){this.camera=e,this.car=t,this.baseDistance=12,this.baseHeight=6,this.speedMultiplier=8,this.heightMultiplier=4,this.lerpBase=.08,this.lerpSpeedMultiplier=.02,this.lookAheadMultiplier=3,this.lookAheadHeight=2}update(e){const t=this.car.mesh.position.clone(),i=this.car.mesh.rotation.y,s=e.speed,o=e.isDrifting,a=e.driftIntensity,n=e.velocity,r=Math.min(s*2,1),c=this.baseDistance+r*this.speedMultiplier,h=this.baseHeight+r*this.heightMultiplier,d=new THREE.Vector3(0,h,c);d.applyAxisAngle(new THREE.Vector3(0,1,0),i),o&&this.addDriftShake(d,a);const m=t.clone().add(d),p=this.lerpBase+r*this.lerpSpeedMultiplier;this.camera.position.lerp(m,p);const u=this.calculateLookTarget(t,n);this.camera.lookAt(u)}addDriftShake(e,t){const i=t*.5;e.x+=(Math.random()-.5)*i,e.y+=(Math.random()-.5)*i*.5,e.z+=(Math.random()-.5)*i*.3}calculateLookTarget(e,t){const i=t.clone().multiplyScalar(this.lookAheadMultiplier),s=e.clone().add(i);return s.y+=this.lookAheadHeight,s}setCameraMode(e){switch(e){case"close":this.baseDistance=8,this.baseHeight=4;break;case"far":this.baseDistance=16,this.baseHeight=8;break;case"cinematic":this.baseDistance=20,this.baseHeight=10,this.lerpBase=.05;break;default:this.baseDistance=12,this.baseHeight=6,this.lerpBase=.08}}getCameraInfo(){return{position:this.camera.position.clone(),target:this.camera.getWorldDirection(new THREE.Vector3),distance:this.baseDistance,height:this.baseHeight}}}class E{constructor(e,t){this.car=e,this.collectibleManager=t,this.collectibleRadius=3,this.boundaryRadius=85,this.bounceMultiplier=1.5,this.speedReduction=.3}checkCollisions(){const e={collected:!1,itemData:null,boundaryhit:!1},t=this.checkCollectibleCollisions();return t.collected&&(e.collected=!0,e.itemData=t.itemData),this.checkBoundaryCollision().hit&&(e.boundaryhit=!0),e}checkCollectibleCollisions(){const e=this.car.mesh.position,t=this.collectibleManager.getCollectibles();for(let i=0;i<t.length;i++){const s=t[i];if(!s.userData.collected&&e.distanceTo(s.position)<this.collectibleRadius)return this.collectibleManager.collectItem(i),{collected:!0,itemData:s.userData}}return{collected:!1}}checkBoundaryCollision(){const e=this.car.mesh.position;if(Math.sqrt(e.x**2+e.z**2)>this.boundaryRadius){const i=new THREE.Vector3(e.x,0,e.z).normalize(),s=this.car.physics;if(s){const a=s.velocity.dot(i);if(a>0){const n=i.multiplyScalar(a*this.bounceMultiplier);s.velocity.sub(n)}s.velocity.multiplyScalar(this.speedReduction)}const o=i.multiplyScalar(this.boundaryRadius*.98);return e.x=o.x,e.z=o.z,e.y=0,{hit:!0}}return{hit:!1}}checkSphereCollision(e,t,i,s){return e.distanceTo(i)<t+s}getClosestCollectible(){const e=this.car.mesh.position,t=this.collectibleManager.getCollectibles();let i=null,s=1/0;return t.forEach(o=>{if(!o.userData.collected){const a=e.distanceTo(o.position);a<s&&(s=a,i=o)}}),{collectible:i,distance:s}}updateSettings(e){e.collectibleRadius!==void 0&&(this.collectibleRadius=e.collectibleRadius),e.boundaryRadius!==void 0&&(this.boundaryRadius=e.boundaryRadius),e.bounceMultiplier!==void 0&&(this.bounceMultiplier=e.bounceMultiplier),e.speedReduction!==void 0&&(this.speedReduction=e.speedReduction)}}class M{constructor(e){this.gameStats=e,this.progressFill=document.getElementById("progress-fill"),this.itemsDisplay=document.getElementById("code-fragments"),this.progressLabel=document.querySelector(".progress-label"),this.controlsHint=document.querySelector(".controls-hint p"),this.storyDialog=document.getElementById("story-dialog"),this.dialogTitle=document.getElementById("dialog-title"),this.dialogText=document.getElementById("dialog-text"),this.menuPanel=document.getElementById("menu-panel")}updateUI(){const e=this.gameStats.projectsCollected+this.gameStats.skillsCollected+this.gameStats.experienceCollected,t=e/this.gameStats.totalCollectibles*100;this.progressFill&&(this.progressFill.style.width=`${t}%`),this.itemsDisplay&&(this.itemsDisplay.textContent=`${e}/${this.gameStats.totalCollectibles}`)}updateSpeedDisplay(e,t){if(!this.controlsHint)return;const i=Math.floor(e*200);t?this.controlsHint.innerHTML=`<strong>ðŸ”¥ DRIFT! Speed: ${i} km/h | WASD - Hareket | SPACE - Drift | ESC - MenÃ¼</strong>`:this.controlsHint.innerHTML=`<strong>Speed: ${i} km/h | WASD - Hareket | SPACE - Drift | ESC - MenÃ¼</strong>`}updateDriftDisplay(e,t){if(!this.progressLabel)return;const i=this.gameStats.projectsCollected+this.gameStats.skillsCollected+this.gameStats.experienceCollected;e&&t>50?this.progressLabel.textContent=`ðŸ”¥ DRIFT COMBO: ${Math.floor(t)} | Portfolio: ${i}/${this.gameStats.totalCollectibles}`:this.progressLabel.textContent="Portfolio Toplama Ä°lerlemesi"}showCollectionDialog(e){if(!this.storyDialog||!this.dialogTitle||!this.dialogText)return;this.dialogTitle.textContent=`${e.name} ToplandÄ±!`;let t="";switch(e.type){case"project":t=`${e.name} projesi toplandÄ±! Teknoloji: ${e.subtitle}. Bu proje portfolio deneyimimin Ã¶nemli bir parÃ§asÄ±.`;break;case"skill":t=`${e.name} yeteneÄŸi toplandÄ±! Seviye: ${e.subtitle}. Bu teknolojide gÃ¼Ã§lÃ¼ deneyimim var.`;break;case"experience":t=`${e.name} deneyimi toplandÄ±! Pozisyon: ${e.subtitle}. Bu deneyim kariyerimde Ã¶nemli bir adÄ±m.`;break}this.dialogText.textContent=t,this.storyDialog.classList.remove("hidden"),setTimeout(()=>{this.hideDialog()},3e3)}showWelcomeDialog(){!this.storyDialog||!this.dialogTitle||!this.dialogText||(this.dialogTitle.textContent="Portfolio Drift Racing'e HoÅŸ Geldin!",this.dialogText.textContent="Merhaba! Ben EyÃ¼p Zafer ÃœNAL. Bu oyunda arabamla drift atarak CV'mdeki projeleri, yetenekleri ve deneyimleri toplamalÄ±sÄ±n. WASD ile sÃ¼r, SPACE ile drift yap!",this.storyDialog.classList.remove("hidden"))}showVictoryDialog(e){!this.storyDialog||!this.dialogTitle||!this.dialogText||(this.dialogTitle.textContent="Tebrikler! ðŸŽ‰",this.dialogText.textContent=`TÃ¼m portfolio Ã¶ÄŸelerini topladÄ±n! Toplam skor: ${e.score} puan. Drift skoru: ${Math.floor(e.driftScore)}. ArtÄ±k portfolyoma gÃ¶z atabilirsin!`,this.storyDialog.classList.remove("hidden"))}hideDialog(){this.storyDialog&&this.storyDialog.classList.add("hidden")}toggleMenu(){this.menuPanel&&this.menuPanel.classList.toggle("hidden")}showMessage(e,t,i=3e3){!this.dialogTitle||!this.dialogText||!this.storyDialog||(this.dialogTitle.textContent=e,this.dialogText.textContent=t,this.storyDialog.classList.remove("hidden"),i>0&&setTimeout(()=>{this.hideDialog()},i))}updateCollectionStats(e){switch(e){case"project":this.gameStats.projectsCollected++;break;case"skill":this.gameStats.skillsCollected++;break;case"experience":this.gameStats.experienceCollected++;break}this.updateUI()}showDebugInfo(e){const t=document.getElementById("debug-info");t&&(t.textContent=JSON.stringify(e,null,2))}getUIState(){return{totalCollected:this.gameStats.projectsCollected+this.gameStats.skillsCollected+this.gameStats.experienceCollected,totalCollectibles:this.gameStats.totalCollectibles,score:this.gameStats.score,driftScore:this.gameStats.driftScore}}}class b{constructor(){this.scene=null,this.camera=null,this.renderer=null,this.init()}init(){console.log("Setting up 3D scene..."),this.scene=new THREE.Scene,this.scene.background=new THREE.Color(8900331),this.scene.fog=new THREE.Fog(8900331,50,200),this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,10,15),this.renderer=new THREE.WebGLRenderer({antialias:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=THREE.PCFSoftShadowMap,document.getElementById("game-container").appendChild(this.renderer.domElement),this.setupLighting(),this.setupEventListeners()}setupLighting(){const e=new THREE.AmbientLight(16777215,.6);this.scene.add(e);const t=new THREE.DirectionalLight(16777215,.8);t.position.set(50,100,50),t.castShadow=!0,t.shadow.mapSize.width=2048,t.shadow.mapSize.height=2048,t.shadow.camera.near=.5,t.shadow.camera.far=500,t.shadow.camera.left=-100,t.shadow.camera.right=100,t.shadow.camera.top=100,t.shadow.camera.bottom=-100,this.scene.add(t)}setupEventListeners(){window.addEventListener("resize",()=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)})}render(){this.renderer.render(this.scene,this.camera)}getScene(){return this.scene}getCamera(){return this.camera}getRenderer(){return this.renderer}}class w{constructor(e){this.scene=e,this.mesh=null,this.wheels=[],this.frontWheels=[],this.physics=null,this.createCar()}createCar(){console.log("Creating player car..."),this.mesh=new THREE.Group,this.createBody(),this.createRoof(),this.createBumper(),this.createWheels(),this.mesh.position.set(0,0,0),this.mesh.rotation.y=0,this.scene.add(this.mesh)}createBody(){const e=new THREE.BoxGeometry(2,.8,4.5),t=new THREE.MeshLambertMaterial({color:14774357}),i=new THREE.Mesh(e,t);i.position.y=.4,i.castShadow=!0,this.mesh.add(i)}createRoof(){const e=new THREE.BoxGeometry(1.6,.6,2.2),t=new THREE.MeshLambertMaterial({color:2962486}),i=new THREE.Mesh(e,t);i.position.y=1.1,i.position.z=-.3,i.castShadow=!0,this.mesh.add(i)}createBumper(){const e=new THREE.BoxGeometry(1.8,.3,.5),t=new THREE.MeshLambertMaterial({color:6516338}),i=new THREE.Mesh(e,t);i.position.y=.15,i.position.z=2.5,this.mesh.add(i)}createWheels(){const e=new THREE.CylinderGeometry(.4,.4,.3),t=new THREE.MeshLambertMaterial({color:2962486}),i=new THREE.MeshLambertMaterial({color:7649791});[{x:-1.2,z:1.8},{x:1.2,z:1.8},{x:-1.2,z:-1.8},{x:1.2,z:-1.8}].forEach((o,a)=>{const n=this.createWheelGroup(e,t,i);n.position.set(o.x,.4,o.z),n.castShadow=!0,this.mesh.add(n),this.wheels.push(n),a<2&&this.frontWheels.push(n)})}createWheelGroup(e,t,i){const s=new THREE.Group,o=new THREE.Mesh(e,t);o.rotation.z=Math.PI/2,s.add(o);const a=new THREE.Mesh(new THREE.CylinderGeometry(.25,.25,.32),i);return a.rotation.z=Math.PI/2,s.add(a),s}updateSteeringWheels(e){this.frontWheels.forEach(t=>{t.rotation.y=e})}animateWheels(e,t){const i=e*8,s=t.z>0?1:-1;this.wheels.forEach(o=>{o.children[0]&&(o.children[0].rotation.x+=i*s)})}addSpoiler(){const e=new THREE.BoxGeometry(1.6,.1,.3),t=new THREE.MeshLambertMaterial({color:2962486}),i=new THREE.Mesh(e,t);i.position.y=1.2,i.position.z=-2.2,i.castShadow=!0,this.mesh.add(i)}addExhaust(){const e=new THREE.CylinderGeometry(.1,.1,.5),t=new THREE.MeshLambertMaterial({color:6516338}),i=new THREE.Mesh(e,t);i.position.set(-.6,.2,-2.2),i.rotation.z=Math.PI/2,this.mesh.add(i);const s=new THREE.Mesh(e,t);s.position.set(.6,.2,-2.2),s.rotation.z=Math.PI/2,this.mesh.add(s)}changeColor(e){this.mesh.children.forEach(t=>{t.material&&t.geometry.type==="BoxGeometry"&&t.material.color.setHex(e)})}setPhysics(e){this.physics=e}getPosition(){return this.mesh.position}getRotation(){return this.mesh.rotation.y}setPosition(e,t,i){this.mesh.position.set(e,t,i)}setRotation(e){this.mesh.rotation.y=e}dispose(){this.scene.remove(this.mesh),this.mesh.traverse(e=>{e.geometry&&e.geometry.dispose(),e.material&&(Array.isArray(e.material)?e.material.forEach(t=>t.dispose()):e.material.dispose())})}}class k{constructor(e){this.scene=e,this.track=null,this.borders=[],this.buildings=[],this.createWorld()}createWorld(){console.log("Creating race track world..."),this.createTrack(),this.createTrackBorders(),this.createBuildings(),this.createEnvironment()}createTrack(){const e=new THREE.PlaneGeometry(200,200),t=new THREE.MeshLambertMaterial({color:3355443,transparent:!0,opacity:.8});this.track=new THREE.Mesh(e,t),this.track.rotation.x=-Math.PI/2,this.track.receiveShadow=!0,this.scene.add(this.track),this.createTrackMarkings()}createTrackMarkings(){this.createCenterLine(),this.createLaneMarkings(),this.createStartFinishLine()}createCenterLine(){const e=new THREE.PlaneGeometry(2,160),t=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,opacity:.8}),i=new THREE.Mesh(e,t);i.rotation.x=-Math.PI/2,i.position.y=.01,this.scene.add(i)}createLaneMarkings(){for(let e=0;e<8;e++){const t=e/8*Math.PI*2,i=60,s=new THREE.PlaneGeometry(1,8),o=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,opacity:.6}),a=new THREE.Mesh(s,o);a.rotation.x=-Math.PI/2,a.rotation.z=t,a.position.x=Math.cos(t)*i,a.position.z=Math.sin(t)*i,a.position.y=.01,this.scene.add(a)}}createStartFinishLine(){const e=new THREE.PlaneGeometry(20,2),t=new THREE.MeshBasicMaterial({color:16776960,transparent:!0,opacity:.9}),i=new THREE.Mesh(e,t);i.rotation.x=-Math.PI/2,i.position.set(0,.01,0),this.scene.add(i)}createTrackBorders(){const e=new THREE.MeshLambertMaterial({color:16729943}),t=80,i=32;for(let s=0;s<i;s++){const o=s/i*Math.PI*2,a=Math.cos(o)*t,n=Math.sin(o)*t,r=new THREE.Mesh(new THREE.BoxGeometry(4,3,4),e);r.position.set(a,1.5,n),r.castShadow=!0,r.receiveShadow=!0,this.borders.push(r),this.scene.add(r)}this.createDecorativeBorders()}createDecorativeBorders(){const e=new THREE.TorusGeometry(1,.5,8,16),t=new THREE.MeshLambertMaterial({color:1710618});for(let i=0;i<16;i++){const s=i/16*Math.PI*2,o=75,a=new THREE.Mesh(e,t);a.position.set(Math.cos(s)*o,.5,Math.sin(s)*o),a.rotation.x=Math.PI/2,a.castShadow=!0,this.scene.add(a)}}createBuildings(){const e=[new THREE.MeshLambertMaterial({color:7101671}),new THREE.MeshLambertMaterial({color:10656766}),new THREE.MeshLambertMaterial({color:7649791}),new THREE.MeshLambertMaterial({color:623843}),new THREE.MeshLambertMaterial({color:47252}),new THREE.MeshLambertMaterial({color:14774357})];for(let t=0;t<25;t++){const i=this.createBuilding(e);this.buildings.push(i),this.scene.add(i)}}createBuilding(e){const t=new THREE.Group,i=Math.random()*8+4,s=Math.random()*20+8,o=Math.random()*8+4,a=new THREE.BoxGeometry(i,s,o),n=e[Math.floor(Math.random()*e.length)],r=new THREE.Mesh(a,n);r.position.y=s/2,r.castShadow=!0,r.receiveShadow=!0,t.add(r),this.addBuildingDetails(t,i,s,o);const c=Math.random()*Math.PI*2,h=100+Math.random()*60;return t.position.set(Math.cos(c)*h,0,Math.sin(c)*h),t}addBuildingDetails(e,t,i,s){this.addWindows(e,t,i,s),Math.random()>.7&&this.addAntenna(e,i),Math.random()>.5&&this.addRooftopEquipment(e,t,i,s)}addWindows(e,t,i,s){const o=new THREE.MeshLambertMaterial({color:Math.random()>.3?16777096:3355443,emissive:Math.random()>.3?2236928:0}),a=Math.floor(t/2),n=Math.floor(i/3);for(let r=1;r<n;r++)for(let c=0;c<a;c++){const h=new THREE.PlaneGeometry(.8,1.2),d=new THREE.Mesh(h,o);d.position.set((c-a/2)*2,r*3,t/2+.01),e.add(d)}}addAntenna(e,t){const i=new THREE.CylinderGeometry(.1,.1,5),s=new THREE.MeshLambertMaterial({color:6710886}),o=new THREE.Mesh(i,s);o.position.y=t+2.5,e.add(o)}addRooftopEquipment(e,t,i,s){const o=new THREE.BoxGeometry(1,.5,1),a=new THREE.MeshLambertMaterial({color:8947848});for(let n=0;n<Math.random()*3+1;n++){const r=new THREE.Mesh(o,a);r.position.set((Math.random()-.5)*t*.8,i+.25,(Math.random()-.5)*s*.8),e.add(r)}}createEnvironment(){this.createClouds(),this.createGroundTexture()}createClouds(){const e=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,opacity:.7});for(let t=0;t<8;t++){const i=new THREE.SphereGeometry(Math.random()*20+10,8,6),s=new THREE.Mesh(i,e);s.position.set((Math.random()-.5)*400,50+Math.random()*30,(Math.random()-.5)*400),this.scene.add(s)}}createGroundTexture(){const e=new THREE.MeshLambertMaterial({color:4881497});for(let t=0;t<20;t++){const i=Math.random()*10+5,s=new THREE.Mesh(new THREE.PlaneGeometry(i,i),e);s.rotation.x=-Math.PI/2,s.position.set((Math.random()-.5)*300,-.01,(Math.random()-.5)*300),this.scene.add(s)}}addObstacle(e,t){const i=new THREE.BoxGeometry(t,t*2,t),s=new THREE.MeshLambertMaterial({color:16739179}),o=new THREE.Mesh(i,s);return o.position.copy(e),o.position.y=t,o.castShadow=!0,this.scene.add(o),o}dispose(){this.buildings.forEach(e=>{this.scene.remove(e)}),this.borders.forEach(e=>{this.scene.remove(e)}),this.track&&this.scene.remove(this.track)}}class S{constructor(e,t){this.scene=e,this.portfolioData=t,this.collectibles=[],this.createCollectibles()}createCollectibles(){console.log("Creating portfolio collectibles..."),this.portfolioData.projects.forEach((e,t)=>{const i=this.createCollectible(e.name,e.tech,e.color,"project",e.points);this.positionCollectible(i,t,this.portfolioData.projects.length,30),this.collectibles.push(i),this.scene.add(i)}),this.portfolioData.skills.forEach((e,t)=>{const i=this.createCollectible(e.name,`${e.level}%`,e.color,"skill",e.level);this.positionCollectible(i,t,this.portfolioData.skills.length,15),this.collectibles.push(i),this.scene.add(i)}),this.portfolioData.experiences.forEach((e,t)=>{const i=this.createCollectible(e.company,e.role,e.color,"experience",e.points);this.positionCollectible(i,t,this.portfolioData.experiences.length,50),this.collectibles.push(i),this.scene.add(i)})}createCollectible(e,t,i,s,o){const a=new THREE.Group,n=this.getCollectibleGeometry(s),r=new THREE.MeshLambertMaterial({color:i,emissive:i,emissiveIntensity:.3}),c=new THREE.Mesh(n,r);return c.castShadow=!0,a.add(c),this.addGlowEffect(a,i),this.addSparkles(a,i),a.userData={name:e,subtitle:t,type:s,points:o,collected:!1,originalY:2,floatOffset:Math.random()*Math.PI*2,rotationSpeed:{x:(Math.random()-.5)*.02,y:.02+Math.random()*.01,z:(Math.random()-.5)*.01}},a}getCollectibleGeometry(e){switch(e){case"project":return new THREE.OctahedronGeometry(1.5);case"skill":return new THREE.IcosahedronGeometry(1.2);case"experience":return new THREE.DodecahedronGeometry(1.3);default:return new THREE.SphereGeometry(1.2)}}addGlowEffect(e,t){const i=new THREE.SphereGeometry(2.5),s=new THREE.MeshLambertMaterial({color:t,transparent:!0,opacity:.1,side:THREE.BackSide}),o=new THREE.Mesh(i,s);e.add(o)}addSparkles(e,t){for(let i=0;i<6;i++){const s=new THREE.SphereGeometry(.1),o=new THREE.MeshLambertMaterial({color:t,transparent:!0,opacity:.8}),a=new THREE.Mesh(s,o),n=i/6*Math.PI*2,r=2.5+Math.random()*.5;a.position.set(Math.cos(n)*r,(Math.random()-.5)*2,Math.sin(n)*r),a.userData={orbitSpeed:.01+Math.random()*.01,orbitRadius:r,orbitAngle:n,bobSpeed:.02+Math.random()*.01},e.add(a)}}positionCollectible(e,t,i,s){const o=t/i*Math.PI*2;e.position.set(Math.cos(o)*s,2,Math.sin(o)*s)}update(){this.collectibles.forEach(e=>{e.userData.collected||this.animateCollectible(e)})}animateCollectible(e){const t=e.userData,i=Date.now()*.001;e.position.y=t.originalY+Math.sin(i*3+t.floatOffset)*.5,e.rotation.x+=t.rotationSpeed.x,e.rotation.y+=t.rotationSpeed.y,e.rotation.z+=t.rotationSpeed.z,this.animateSparkles(e,i),this.animateGlow(e,i)}animateSparkles(e,t){e.children.forEach((i,s)=>{if(s>1&&i.userData.orbitSpeed){const o=i.userData;o.orbitAngle+=o.orbitSpeed,i.position.x=Math.cos(o.orbitAngle)*o.orbitRadius,i.position.z=Math.sin(o.orbitAngle)*o.orbitRadius,i.position.y=Math.sin(t*o.bobSpeed*10)*.3,i.material.opacity=.5+Math.sin(t*5+o.orbitAngle)*.3}})}animateGlow(e,t){if(e.children[1]){const i=e.children[1];i.material.opacity=.05+Math.sin(t*2)*.05,i.scale.setScalar(1+Math.sin(t*3)*.1)}}collectItem(e){if(e>=0&&e<this.collectibles.length){const t=this.collectibles[e];t.userData.collected=!0,this.playCollectionAnimation(t)}}playCollectionAnimation(e){const t=()=>{e.scale.multiplyScalar(.95),e.scale.x>.1?requestAnimationFrame(t):e.visible=!1};t(),this.createCollectionBurst(e)}createCollectionBurst(e){const t=[];for(let o=0;o<12;o++){const a=new THREE.Mesh(new THREE.SphereGeometry(.1),new THREE.MeshLambertMaterial({color:e.children[0].material.color,transparent:!0,opacity:1}));a.position.copy(e.position);const n=new THREE.Vector3((Math.random()-.5)*2,Math.random(),(Math.random()-.5)*2).normalize();a.userData={velocity:n.multiplyScalar(Math.random()*5+2),life:1},this.scene.add(a),t.push(a)}const s=()=>{t.forEach((o,a)=>{o.userData.life-=.02,o.material.opacity=o.userData.life,o.position.add(o.userData.velocity),o.userData.velocity.multiplyScalar(.98),o.userData.life<=0&&(this.scene.remove(o),t.splice(a,1))}),t.length>0&&requestAnimationFrame(s)};s()}getCollectibles(){return this.collectibles}getCollectibleCount(){return this.collectibles.length}getCollectedCount(){return this.collectibles.filter(e=>e.userData.collected).length}reset(){this.collectibles.forEach(e=>{e.userData.collected=!1,e.visible=!0,e.scale.set(1,1,1)})}dispose(){this.collectibles.forEach(e=>{this.scene.remove(e),e.traverse(t=>{t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()})}),this.collectibles=[]}}const T={projects:[{name:"AvukatLLM",tech:"AI/ML",points:100,color:16739179},{name:"GoDash",tech:"Go",points:80,color:5164484},{name:"MyYDS",tech:"React",points:90,color:4569041},{name:"TYT Platform",tech:"PWA",points:85,color:9883316},{name:"LinkedHU",tech:"Node.js",points:75,color:16771751}],skills:[{name:"JavaScript",level:90,color:15965202},{name:"Python",level:85,color:3447003},{name:"React",level:80,color:6413051},{name:"Three.js",level:75,color:0},{name:"AI/ML",level:85,color:15158332}],experiences:[{company:"Binary Brain Technology",role:"Software Intern",points:150,color:10181046},{company:"TellUS",role:"Software Intern",points:120,color:3426654},{company:"Hacettepe University",role:"Student",points:100,color:3066993}]};console.log("Loading Portfolio Drift Racing Game - VERSION 4.0 - Modular");class x{constructor(){console.log("Portfolio Drift Game starting..."),this.initialized=!1,this.loading=!0,this.gameStats={projectsCollected:0,skillsCollected:0,experienceCollected:0,totalCollectibles:15,score:0,driftScore:0},this.sceneManager=null,this.carPhysics=null,this.carControls=null,this.cameraSystem=null,this.collisionSystem=null,this.uiSystem=null,this.car=null,this.world=null,this.collectibleManager=null,this.init()}async init(){console.log("Initializing Portfolio Drift Game...");try{this.sceneManager=new b,await this.loadAssets(),this.world=new k(this.sceneManager.scene),this.car=new w(this.sceneManager.scene),this.collectibleManager=new S(this.sceneManager.scene,T),this.carPhysics=new g(this.car,this.sceneManager.scene),this.carControls=new f,this.cameraSystem=new y(this.sceneManager.camera,this.car),this.collisionSystem=new E(this.car,this.collectibleManager),this.uiSystem=new M(this.gameStats),this.setupUI(),this.hideLoadingScreen(),this.showWelcomeDialog(),this.gameLoop(),this.initialized=!0,console.log("Portfolio Drift Game successfully initialized!")}catch(e){console.error("Game initialization error:",e),this.showError(e.message)}}async loadAssets(){return new Promise(e=>{console.log("Loading game assets..."),setTimeout(()=>{e()},1500)})}setupUI(){this.uiSystem.updateUI(),document.getElementById("dialog-continue").addEventListener("click",()=>{this.uiSystem.hideDialog()}),document.getElementById("menu-button").addEventListener("click",()=>{this.uiSystem.toggleMenu()}),document.getElementById("close-menu").addEventListener("click",()=>{this.uiSystem.toggleMenu()}),document.getElementById("restart-button").addEventListener("click",()=>{window.location.reload()}),document.getElementById("back-to-portfolio").addEventListener("click",()=>{window.location.href="../index.html"})}update(){if(!this.initialized||this.loading)return;this.carControls.update(),this.carPhysics.update(this.carControls.getInputState());const e=this.collisionSystem.checkCollisions();e.collected&&this.handleItemCollection(e),this.cameraSystem.update(this.carPhysics.getPhysicsState()),this.collectibleManager.update(),this.uiSystem.updateUI(),this.uiSystem.updateSpeedDisplay(this.carPhysics.getSpeed(),this.carPhysics.getIsDrifting()),this.uiSystem.updateDriftDisplay(this.carPhysics.getIsDrifting(),this.carPhysics.getDriftScore())}handleItemCollection(e){const t=e.itemData;switch(this.gameStats.score+=t.points,t.type){case"project":this.gameStats.projectsCollected++;break;case"skill":this.gameStats.skillsCollected++;break;case"experience":this.gameStats.experienceCollected++;break}this.uiSystem.showCollectionDialog(t),this.gameStats.projectsCollected+this.gameStats.skillsCollected+this.gameStats.experienceCollected>=this.gameStats.totalCollectibles&&setTimeout(()=>{this.uiSystem.showVictoryDialog(this.gameStats)},2e3)}showWelcomeDialog(){this.uiSystem.showWelcomeDialog()}hideLoadingScreen(){const e=document.getElementById("loading-screen");e.style.opacity="0",setTimeout(()=>{e.style.display="none",this.loading=!1},500)}showError(e){const t=document.getElementById("loading-screen");t&&(t.innerHTML=`
                <div class="loading-content">
                    <p style="color: #f50057; font-size: 18px;">Hata: ${e}</p>
                    <button onclick="window.location.reload()" 
                            style="margin-top: 15px; padding: 8px 16px; background: #f50057; 
                                   color: white; border: none; border-radius: 4px; cursor: pointer;">
                        Yeniden YÃ¼kle
                    </button>
                </div>
            `)}gameLoop(){const e=()=>{this.update(),this.sceneManager.render(),requestAnimationFrame(e)};e()}}console.log("Portfolio Drift Racing - Modular Version 4.0");console.log("Initializing game modules...");document.addEventListener("DOMContentLoaded",()=>{console.log("DOM loaded, initializing Portfolio Drift Game..."),setTimeout(()=>{try{window.gameInstance=new x,console.log("Game instance created successfully!")}catch(l){console.error("Failed to initialize game:",l);const e=document.getElementById("loading-screen");e&&(e.innerHTML=`
                    <div class="loading-content">
                        <i class="fas fa-exclamation-triangle" style="font-size: 48px; color: #f50057; margin-bottom: 20px;"></i>
                        <p style="color: #f50057; font-size: 18px; margin-bottom: 10px;">
                            Portfolio Drift oyunu baÅŸlatÄ±lamadÄ±
                        </p>
                        <p style="color: #666; font-size: 14px; margin-bottom: 20px;">
                            Hata: ${l.message}
                        </p>
                        <button onclick="window.location.reload()" 
                                style="margin: 10px; padding: 10px 20px; background: #f50057; 
                                       color: white; border: none; border-radius: 6px; cursor: pointer;
                                       font-size: 16px;">
                            <i class="fas fa-redo"></i> Yeniden Dene
                        </button>
                        <button onclick="window.location.href='../index.html'" 
                                style="margin: 10px; padding: 10px 20px; background: #666; 
                                       color: white; border: none; border-radius: 6px; cursor: pointer;
                                       font-size: 16px;">
                            <i class="fas fa-home"></i> Ana Sayfaya DÃ¶n
                        </button>
                    </div>
                `)}},500)});window.addEventListener("error",l=>{console.error("Global error caught:",l.error)});window.addEventListener("unhandledrejection",l=>{console.error("Unhandled promise rejection:",l.reason)});console.log("Portfolio Drift Game main.js loaded successfully");
